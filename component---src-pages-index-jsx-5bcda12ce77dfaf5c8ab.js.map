{"version":3,"sources":["webpack:///./src/components/Header.jsx","webpack:///./src/components/Cube.jsx","webpack:///./src/components/FloatingBlobsBackground.jsx","webpack:///./src/pages/index.jsx","webpack:///./src/components/seo.jsx","webpack:///./src/utils/index.js","webpack:///./src/components/custom_hooks/useWindowSize.js"],"names":["words","header","css","palette","gold","animations","fadeIn","sloganCss","name","styles","sloganPartCss","infinity","red","flicker","keyframes","_templateObject","white","addGlowAndFlickering","Header","_useState","useState","slogan","setSlogan","_useState2","isSloganDecoded","setIsSloganDecoded","windowWidth","useWindowSize","useEffect","timerId","setTimeout","sloganAdjusted","map","word","i","split","char","j","letter","symbolsAndLetter","pick","randIdx","join","every","el","clearTimeout","Object","core_browser_esm","css_browser_esm","part","partIdx","isInfinity","toLowerCase","replace","className","key","symbol","isFlickeringLetter","randInt","cubeWrapper","float","Cube_templateObject","cube","purple","lightPurple","facet","beige","link","teal","notations","text","to","side","Cube","_ref","Math","random","Link","windowHeight","devicePixelRatio","window","innerWidth","innerHeight","params","animate","planeY","constant","negated","displayHelper","clock","THREE","scene","camera","position","set","directLight","add","clippingPlane","clippingPlaneHelper","visible","geometry","object","stencilGroup","plane","group","baseMaterial","depthWrite","depthTest","colorWrite","stencilWrite","stencilFunc","backFaceMaterial","clone","clippingPlanes","stencilFail","stencilZFail","stencilZPass","backFaceMesh","frontFaceMaterial","frontFaceMesh","createPlaneStencilGroup","renderer","planeGeometry","planeMaterial","color","stencilRef","planeObject","onAfterRender","clearStencil","document","antialias","setPixelRatio","setSize","setClearColor","localClippingEnabled","body","appendChild","domElement","controls","OrbitControls","minDistance","maxDistance","update","delta","getDelta","elapsedTime","getElapsedTime","requestAnimationFrame","rotation","x","y","positionXAmplitude","sin","cos","coplanarPoint","lookAt","normal","z","render","FloatingBlobsBackground","React","style","display","addEventListener","aspect","updateProjectionMatrix","pageContainer","cubeContainer","IndexPage","react_default","a","Fragment","seo","title","components_Header","components_Cube","detailsQuery","SEO","description","lang","meta","keywords","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","author","concat","length","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","propTypes","PropTypes","string","arrayOf","isRequired","__webpack_require__","d","__webpack_exports__","floor","defaultHeight","defaultWidth","react__WEBPACK_IMPORTED_MODULE_0__","dimensions","setDimensions","handler","removeEventListener"],"mappings":"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","file":"component---src-pages-index-jsx-5bcda12ce77dfaf5c8ab.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { css, keyframes } from '@emotion/core'\n\nimport { randIdx, randInt } from '../utils'\nimport useWindowSize from './custom_hooks/useWindowSize'\n\nimport { palette } from '../styles/meta'\nimport { animations } from '../styles/shared'\n\nconst HEADER_TIMING = 2\n\nconst symbols = `!@#$%^&*()+-_=~<>,.?/{}[]|;:`\nconst words = [`Dream.`, `Code.`, ``, `Sleep.`, `Repeat.`]\n\nconst header = css`\n  display: grid;\n  place-items: center;\n  color: ${palette.gold};\n  opacity: 1;\n  animation: ${animations.fadeIn} ${HEADER_TIMING}s ease-in-out;\n  @media (max-width: 888px) {\n    height: 100vh;\n  }\n`\nconst sloganCss = css`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(10rem, max-content));\n  margin-left: 1.5rem;\n  font-family: \"Audiowide\";\n  font-size: 3rem;\n  font-weight: 700;\n  text-transform: uppercase;\n  letter-spacing: .5rem;\n  @media (max-width: 888px) {\n    grid-template-rows: repeat(5, max-content);\n    grid-template-columns: none;\n    grid-gap: .5rem;\n    justify-items: center;\n    .slogan__part--sleep {\n      margin-left: 1.5rem;\n    }\n    .slogan__part--repeat{\n      margin-left: 2rem;\n    }\n  }\n`\nconst sloganPartCss = css`\n  margin-top: 0;\n  height: 5rem;\n  line-height: 5rem;\n  transition: text-shadow ${HEADER_TIMING}s ease-out;\n  .slogan__letter, .slogan__letter--flickering {\n    display: inline-block;\n    width: 3rem;\n    text-align: center;\n  }\n  /* dots */\n  .slogan__letter:last-of-type {\n    text-align: left;\n  }\n  /* first dot */\n  &:first-of-type .slogan__letter:last-of-type {\n    padding-left: .5rem;\n  }\n`\nconst infinity = css`\n  position: relative;\n  opacity: 0;\n  width: 10rem;\n  animation: ${animations.fadeIn} ${HEADER_TIMING}s ease-in-out both;\n  &::after, &::before {\n    content: \"\";\n    position: absolute;\n    top: 15%;\n    left: 43%;\n    width: 1.5rem;\n    height: 1.5rem;\n    border: 1rem solid ${palette.red};\n    border-radius: 0 50% 50% 50%;\n    transform: rotate(-45deg);\n    transition: box-shadow ${HEADER_TIMING}s ease-out;\n  }\n  &::before {\n    top: 15%;\n    left: 3%;\n    border-radius: 50% 50% 50% 0;\n    transform: rotate(-135deg);\n  }\n`\nconst flicker = keyframes`\n  0%, 8.999%, 16%, 31.999%, 47%, 69.999%, 73%, 74.999%, 76%, 83.999%, 85%, 100% {\n    opacity: 1;\n    text-shadow:\n      0 0 .8rem ${palette.gold},\n      0 0 4.4rem ${palette.gold},\n      0 0 6.6rem ${palette.white};\n  }\n  9%, 15.999%, 32%, 46.999%, 70%, 72.999%, 75%, 75.999%, 84%, 84.999% {\n    opacity: .55;\n    text-shadow: none;\n  }\n`\nconst addGlowAndFlickering = css`\n  [class^=slogan__part] {\n    text-shadow:\n      0 0 .8rem ${palette.gold},\n      0 0 4.4rem ${palette.gold},\n      0 0 7.7rem ${palette.white};\n  }\n  .infinity {\n    &::before, &::after {\n      box-shadow:\n        inset 0 0 .5rem ${palette.red},\n        0 0 3.3rem ${palette.red},\n        0 0 7.7rem ${palette.red};\n    }\n  }\n  .slogan__letter--flickering {\n    animation: ${flicker} 15s linear ${HEADER_TIMING}s infinite;\n  }\n`\n\nconst Header = () => {\n  const [slogan, setSlogan] = useState([`††††††`, `∑∑∑∑∑`, ``, `ΩΩΩΩΩΩ`, `ßßßßßßß`])\n  const [isSloganDecoded, setIsSloganDecoded] = useState(false)\n  const { windowWidth } = useWindowSize()\n\n  // Decode slogan.\n  useEffect(() => {\n    if (!isSloganDecoded) {\n      const timerId = setTimeout(() => {\n        const sloganAdjusted = slogan.map((word, i) => (\n          word.split(``).map((char, j) => {\n            const letter = words[i][j]\n            if (char === letter) return char\n\n            const symbolsAndLetter = symbols + letter\n            const pick = symbolsAndLetter[randIdx(symbolsAndLetter)]\n            // Account for the possibility of picking the same symbol twice.\n            // If pick is the same, slip in a letter.\n            if (pick === char) return letter\n\n            return pick\n          }).join(``)\n        ))\n\n        setSlogan(sloganAdjusted)\n      }, 50)\n\n      if (slogan.every((el, i) => el === words[i])) {\n        setIsSloganDecoded(true)\n      }\n\n      return () => clearTimeout(timerId)\n    }\n  }, [isSloganDecoded, slogan])\n\n  return (\n    <header\n      css={header}\n    >\n      <ul\n        css={[\n          sloganCss,\n          isSloganDecoded && (windowWidth >= 1024) && addGlowAndFlickering\n        ]}\n      >\n        {slogan.map((part, partIdx) => {\n          const isInfinity = (partIdx === 2)\n          const word = words[partIdx].toLowerCase().replace(`.`, ``)\n\n          return (\n            <li\n              css={[sloganPartCss, isInfinity && infinity]}\n              className={isInfinity ? \"infinity\" : `slogan__part--${word}`}\n              key={part}\n            >\n              {part.split(``).map((symbol) => {\n                const isFlickeringLetter = (\n                  symbol.toLowerCase() === `d`\n                  || symbol.toLowerCase() === `m`)\n\n                return (\n                  <span\n                    className={\n                      isFlickeringLetter && partIdx === 0\n                        ? `slogan__letter--flickering`\n                        : `slogan__letter`}\n                    key={randInt()}\n                  >\n                    {symbol}\n                  </span>\n                )\n              })}\n            </li>\n          ) })}\n      </ul>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { css, keyframes } from '@emotion/core'\n\nimport Link from './Link'\n\nimport { palette } from '../styles/meta'\n\nconst EDGE_LEN = `25rem`\nconst DETACH_DIST = `20rem`\n\nconst cubeWrapper = css`\n  @media (max-width: 375px) {\n    transform: scale(.55);\n  }\n  @media (min-width: 375px) and (max-width: 525px) {\n    transform: scale(.7);\n  }\n  @media (min-width: 525px) and (max-width: 768px) {\n    transform: scale(.9);\n  }\n`\nconst float = keyframes`\n  from, to {\n    transform: rotate3d(1, 1, 0, 55deg);\n  }\n\n  25% {\n    transform:\n      rotate3d(1.1, 0.95, 0.05, 57deg)\n      scale3d(1.02, 1.02, 1.02)\n      translate3d(10px, 20px, -10px);\n  }\n\n  60% {\n    transform:\n      rotate3d(1, 0.85, 0.1, 55deg)\n      scale3d(1.04, 1.04, 1.04)\n      translate3d(-10px, 20px, 10px);\n  }\n`\nconst cube = css`\n  width: ${EDGE_LEN};\n  height: ${EDGE_LEN};\n  transform-style: preserve-3d;\n  animation: ${float} 15s linear infinite;\n  .cube__front, .cube__back, .cube__left,\n  .cube__right, .cube__bottom, .cube__top {\n    background-color: ${palette.purple};\n    box-shadow: 0 0 10rem 1.5rem ${palette.lightPurple};\n    transition: transform .5s ease-out;\n  }\n  .cube__front {\n    transform: translateZ(calc(${EDGE_LEN} / 2));\n    &:hover ~ .cube__back {\n      box-shadow: 0 0 8rem 3rem ${palette.lightPurple};\n      transform: rotateY(180deg) rotateZ(90deg) translateZ(${DETACH_DIST});\n    }\n  }\n  .cube__back {\n    transform: rotateY(180deg) translateZ(calc(${EDGE_LEN} / 2));\n  }\n  .cube__left {\n    transform: rotateY(270deg) translateZ(calc(${EDGE_LEN} / 2));\n    &:hover ~ .cube__right {\n      box-shadow: 0 0 8rem 3rem ${palette.lightPurple};\n      transform: rotateY(90deg) translateZ(${DETACH_DIST});\n    }\n  }\n  .cube__right {\n    transform: rotateY(90deg) translateZ(calc(${EDGE_LEN} / 2));\n  }\n  .cube__bottom {\n    transform: rotateX(270deg) translateZ(calc(${EDGE_LEN} / 2));\n    &:hover ~ .cube__top {\n      box-shadow: 0 0 8rem 3rem ${palette.lightPurple};\n      transform: rotateX(90deg) rotateZ(-90deg) translateZ(${DETACH_DIST});\n    }\n  }\n  .cube__top {\n    transform: rotateX(90deg) translateZ(calc(${EDGE_LEN} / 2));\n  }\n`\nconst facet = css`\n  position: absolute;\n  height: ${EDGE_LEN};\n  line-height: ${EDGE_LEN};\n  width: ${EDGE_LEN};\n  margin: 0;\n  border: 1px solid ${palette.beige};\n  text-transform: uppercase;\n  font-size: 3.3rem;\n  text-align: center;\n`\nconst link = css`\n  color: ${palette.beige};\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  &:hover {\n    cursor: pointer;\n    background-color: ${palette.teal};\n  }\n`\n\nconst notations = [\n  { text: `About`, to: `/about`, side: `front` },\n  { text: `Get to know me`, side: `back` },\n  { text: `Blog`, to: `/blog`, side: `left` },\n  { text: `Something to read`, side: `right` },\n  { text: `Terminal`, to: `/cmd`, side: `bottom` },\n  { text: `Switch to cmd`, side: `top` },\n]\n\nconst Cube = () => (\n  <div css={cubeWrapper}>\n    <div css={cube}>\n      {notations.map(({ text, to, side }) => (\n        <figure\n          key={Math.random()}\n          className={`cube__${side}`}\n          css={facet}\n        >\n          {to && (\n            <Link\n              to={to}\n              css={link}\n            >\n              {text}\n            </Link>\n          )}\n        </figure>\n      ))}\n    </div>\n  </div>\n)\n\nexport default Cube\n","import * as THREE from 'three'\nimport * as React from 'react'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\n// import { GUI } from 'lil-gui'\n\nlet windowWidth = 1024\nlet windowHeight = 1024\nlet devicePixelRatio = 1\n\nif (typeof window !== `undefined`) {\n  // eslint-disable-next-line\n  devicePixelRatio = window.devicePixelRatio\n  windowWidth = window.innerWidth\n  windowHeight = window.innerHeight\n}\n\nconst params = {\n  animate: true,\n  planeY: {\n    constant: 0,\n    negated: false,\n    displayHelper: false\n  },\n}\n\nfunction createPlaneStencilGroup(geometry, plane) {\n  const group = new THREE.Group()\n\n  const baseMaterial = new THREE.MeshBasicMaterial()\n  baseMaterial.depthWrite = false\n  baseMaterial.depthTest = false\n  baseMaterial.colorWrite = false\n  baseMaterial.stencilWrite = true\n  baseMaterial.stencilFunc = THREE.AlwaysStencilFunc\n\n  const backFaceMaterial = baseMaterial.clone()\n  backFaceMaterial.side = THREE.BackSide\n  backFaceMaterial.clippingPlanes = [plane]\n  backFaceMaterial.stencilFail = THREE.IncrementWrapStencilOp\n  backFaceMaterial.stencilZFail = THREE.IncrementWrapStencilOp\n  backFaceMaterial.stencilZPass = THREE.IncrementWrapStencilOp\n  const backFaceMesh = new THREE.Mesh(geometry, backFaceMaterial)\n  group.add(backFaceMesh)\n\n  const frontFaceMaterial = baseMaterial.clone()\n  frontFaceMaterial.side = THREE.FrontSide\n  frontFaceMaterial.clippingPlanes = [plane]\n  frontFaceMaterial.stencilFail = THREE.DecrementWrapStencilOp\n  frontFaceMaterial.stencilZFail = THREE.DecrementWrapStencilOp\n  frontFaceMaterial.stencilZPass = THREE.DecrementWrapStencilOp\n\n  const frontFaceMesh = new THREE.Mesh(geometry, frontFaceMaterial)\n\n  group.add(frontFaceMesh)\n\n  return group\n}\n\nconst clock = new THREE.Clock()\n\nconst scene = new THREE.Scene()\n\nconst camera = new THREE.PerspectiveCamera(36, windowWidth / windowHeight, 1, 25)\ncamera.position.set(0, 5, 0)\n\n// Light\n// const ambientLight = new THREE.AmbientLight(0xffffff, 1.5)\n// scene.add(ambientLight)\n\nconst directLight = new THREE.DirectionalLight(0xffffff, 3)\ndirectLight.position.set(5, 10, 7.5)\nscene.add(directLight)\n\nconst clippingPlane = new THREE.Plane(new THREE.Vector3(0, -1, 0), -0.1)\nconst clippingPlaneHelper = new THREE.PlaneHelper(clippingPlane, 2, 0xffffff)\nclippingPlaneHelper.visible = false\nscene.add(clippingPlaneHelper)\n\nconst geometry = new THREE.TorusKnotGeometry(0.55, 0.15, 220, 60)\nconst object = new THREE.Group()\nscene.add(object)\n\nconst stencilGroup = createPlaneStencilGroup(geometry, clippingPlane)\nobject.add(stencilGroup)\n\nconst planeGeometry = new THREE.PlaneGeometry(8, 8)\nconst planeMaterial = new THREE.MeshStandardMaterial({\n  color: 0x17758a,\n  stencilWrite: true,\n  stencilRef: 0,\n  stencilFunc: THREE.NotEqualStencilFunc,\n  stencilFail: THREE.ReplaceStencilOp,\n  stencilZFail: THREE.ReplaceStencilOp,\n  stencilZPass: THREE.ReplaceStencilOp,\n})\nconst planeObject = new THREE.Mesh(planeGeometry, planeMaterial)\nplaneObject.onAfterRender = (renderer) => {\n  renderer.clearStencil()\n}\nscene.add(planeObject)\n\n// const objectOutsideMaterial = new THREE.MeshPhongMaterial({\n//   color: 0x00ff00,\n//   shininess: 100,\n//   clippingPlanes: [clippingPlane],\n// })\n// const clippedColorFront = new THREE.Mesh(geometry, objectOutsideMaterial)\n// object.add(clippedColorFront)\n\n\n// Renderer\nlet renderer\nif (typeof document !== 'undefined') {\n  renderer = new THREE.WebGLRenderer({ antialias: true })\n  renderer.setPixelRatio(devicePixelRatio)\n  renderer.setSize(windowWidth, windowHeight)\n  renderer.setClearColor(0x0a0010)\n  renderer.localClippingEnabled = true\n\n  document.body.appendChild(renderer.domElement)\n\n  // Controls\n  const controls = new OrbitControls(camera, renderer.domElement)\n  controls.minDistance = 3\n  controls.maxDistance = 20\n  controls.update()\n}\n\nfunction onWindowResize() {\n  camera.aspect = windowWidth / windowHeight\n  camera.updateProjectionMatrix()\n\n  if (renderer) {\n    renderer.setSize(windowWidth, windowHeight)\n  }\n}\n\nif (typeof window !== 'undefined') {\n  window.addEventListener('resize', onWindowResize)\n}\n\n// GUI\n// const gui = new GUI()\n// gui.add(params, 'animate')\n// const planeY = gui.addFolder('planeY')\n// planeY.add(params.planeY, 'displayHelper').onChange(v => clippingPlaneHelper.visible = v)\n// planeY.add(params.planeY, 'constant').min(- 1).max(1).onChange(d => clippingPlane.constant = d)\n// planeY.add(params.planeY, 'negated').onChange(() => {\n//   clippingPlane.negate()\n//   params.planeY.constant = clippingPlane.constant\n// })\n\nfunction animate() {\n  const delta = clock.getDelta()\n  const elapsedTime = clock.getElapsedTime()\n\n  requestAnimationFrame(animate)\n\n  if (params.animate) {\n    object.rotation.x += delta * 0.5\n    object.rotation.y += delta * 0.2\n    const positionXAmplitude = Math.sin(elapsedTime * 0.05) * 1.75\n    object.position.x = positionXAmplitude\n    object.position.y = Math.cos(elapsedTime * 0.45)\n  }\n\n  clippingPlane.coplanarPoint(planeObject.position)\n  planeObject.lookAt(\n    planeObject.position.x - clippingPlane.normal.x,\n    planeObject.position.y - clippingPlane.normal.y,\n    planeObject.position.z - clippingPlane.normal.z,\n  )\n\n  if (renderer) {\n    renderer.render(scene, camera)\n  }\n}\n\nexport default function FloatingBlobsBackground() {\n  React.useEffect(() => {\n    if (renderer && renderer.domElement.style.display === 'none') {\n      renderer.domElement.style.display = 'block'\n    }\n\n    animate()\n\n    return () => {\n      if (renderer) {\n        renderer.domElement.style.display = 'none'\n      }\n    }\n  }, [])\n\n  return null\n}\n","import React from 'react'\nimport { css } from '@emotion/core'\n\nimport Header from '../components/Header'\nimport SEO from '../components/seo'\nimport Cube from '../components/Cube'\nimport FloatingBlobsBackground from '../components/FloatingBlobsBackground'\n\nconst pageContainer = css`\n  display: grid;\n  min-height: 100vh;\n  grid-template-rows: 1fr 7fr;\n  @media (max-width: 888px) {\n    display: block;\n  }\n`\nconst cubeContainer = css`\n  display: grid;\n  place-items: center;\n  overflow-y: hidden;\n  @media (max-width: 888px) {\n    height: 100vh;\n  }\n`\n\nconst IndexPage = () => (\n  <>\n    <SEO title=\"Root\" />\n    <div css={pageContainer}>\n      <Header />\n      <main css={cubeContainer}>\n        <Cube />\n      </main>\n      <FloatingBlobsBackground />\n    </div>\n  </>\n)\n\nexport default IndexPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n\nexport default function SEO({\n  description, lang, meta, keywords, title,\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription = description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  description: ``,\n  lang: `en`,\n  meta: [],\n  keywords: [`blog`, `web development`],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.string),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n","const randIdx = ({ length }) => Math.floor(Math.random() * length)\n\nconst randInt = () => Math.random() * 100000\n\nexport { randIdx, randInt }\n","import { useState, useEffect } from 'react'\n\nlet defaultHeight\nlet defaultWidth\n\nif (typeof window !== `undefined`) {\n  defaultHeight = window.innerHeight\n  defaultWidth = window.innerWidth\n}\n\nconst useWindowSize = () => {\n  const [dimensions, setDimensions] = useState({\n    windowHeight: defaultHeight,\n    windowWidth: defaultWidth,\n  })\n\n  useEffect(() => {\n    const handler = () => setDimensions({\n      windowHeight: window.innerHeight,\n      windowWidth: window.innerWidth,\n    })\n\n    window.addEventListener(`resize`, handler)\n    return () => window.removeEventListener(`resize`, handler)\n  }, [])\n\n  return dimensions\n}\n\nexport default useWindowSize\n"],"sourceRoot":""}