{"version":3,"sources":["webpack:///./src/pages/404.jsx","webpack:///./src/components/seo.jsx"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","_components_seo__WEBPACK_IMPORTED_MODULE_2__","title","detailsQuery","SEO","_ref","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","propTypes","PropTypes","string","arrayOf","isRequired"],"mappings":"qIAYeA,UARM,kBACnBC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,SAAA,KACEJ,OAAAC,EAAA,EAAAD,CAACK,EAAA,EAAD,CAAKC,MAAM,mBACXN,OAAAC,EAAA,EAAAD,CAAA,uBACAA,OAAAC,EAAA,EAAAD,CAAA,6MCHEO,EAAY,aAYH,SAASC,EAATC,GAEZ,IADDC,EACCD,EADDC,YAAaC,EACZF,EADYE,KAAMC,EAClBH,EADkBG,KAAMC,EACxBJ,EADwBI,SAAUP,EAClCG,EADkCH,MAEnC,OACEN,OAAAC,EAAA,EAAAD,CAACc,EAAA,EAAD,CACEC,MAAOR,EACPS,OAAQ,SAACC,GACP,IAAMC,EAAkBR,GAAeO,EAAKE,KAAKC,aAAaV,YAC9D,OACEV,OAAAC,EAAA,EAAAD,CAACqB,EAAAlB,EAAD,CACEmB,eAAgB,CAAEX,QAClBL,MAAOA,EACPiB,cAAa,QAAUN,EAAKE,KAAKC,aAAad,MAC9CM,KAAM,CACJ,CACEY,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASnB,GAEX,CACEoB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAASnB,GAEX,CACEkB,KAAI,sBACJC,QAASP,IAGVU,OACCf,EAASgB,OAAS,EACd,CACAL,KAAI,WACJC,QAASZ,EAASiB,KAAT,OAET,IAELF,OAAOhB,MAnDlBK,KAAAc,IA2DJvB,EAAIwB,aAAe,CACjBtB,YAAW,GACXC,KAAI,KACJC,KAAM,GACNC,SAAU,4BAGZL,EAAIyB,UAAY,CACdvB,YAAawB,IAAUC,OACvBxB,KAAMuB,IAAUC,OAChBvB,KAAMsB,IAAUE,QAAQF,IAAUC,QAClCtB,SAAUqB,IAAUE,QAAQF,IAAUC,QACtC7B,MAAO4B,IAAUC,OAAOE","file":"component---src-pages-404-jsx-26d2d1125cb4e24eeef2.js","sourcesContent":["import React from 'react'\n\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </>\n)\n\nexport default NotFoundPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n\nexport default function SEO({\n  description, lang, meta, keywords, title,\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription = description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  description: ``,\n  lang: `en`,\n  meta: [],\n  keywords: [`blog`, `web development`],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.string),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n"],"sourceRoot":""}