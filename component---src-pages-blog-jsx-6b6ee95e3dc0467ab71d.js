(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{166:function(e,t,n){"use strict";n.r(t);var o=n(2),r=n(213),a=n(1),i=n.n(a),s=n(185),l=n(193),c=n(174),u=n(24),m=Object(o.b)("position:relative;display:grid;grid-template-columns:repeat(2,1fr);min-height:100vh;background-color:",u.a.black,";overflow-y:hidden;@media (max-width:925px){grid-template-columns:none;grid-template-rows:repeat(2,1fr);}"),d={name:"1fri2vb",styles:"display:grid;place-items:center;"},p={name:"1co21o8",styles:"-webkit-text-fill-color:transparent;color:transparent;-webkit-background-clip:text;background-clip:text;margin:0;writing-mode:vertical-lr;text-transform:uppercase;font-size:35rem;user-select:none;cursor:default;@media (max-width:425px){font-size:10rem;}@media (min-width:425px) and (max-width:575px){font-size:15rem;}@media (min-width:575px) and (max-width:750px){font-size:20rem;}@media (min-width:750px) and (max-width:925px){font-size:25rem;}@media (max-width:925px){align-self:end;writing-mode:lr;}"},h={name:"6dufhj",styles:"align-self:center;@media (max-width:925px){justify-self:center;}"},y={name:"1wv0gfn",styles:"position:relative;padding:.5rem 0;&:hover::before{content:'ðŸ‘‰';position:absolute;top:.75rem;left:-3rem;font-size:2rem;}"},f=Object(o.b)("transition:box-shadow .3s;font-size:1.8rem;color:",u.a.beige,";&:hover{box-shadow:0 .3rem ",u.a.gold,";text-decoration:inherit;}@media (max-width:925px){justify-self:center;font-size:1.6rem;}");t.default=function(){var e=r.data.headerImg,t=Object(a.useRef)(null);return Object(a.useEffect)(function(){t.current.style.cssText+="\n      background-image: url("+e.publicURL+");\n      background-color: "+u.a.gold+";\n    "},[e.publicURL]),Object(o.c)(i.a.Fragment,null,Object(o.c)(o.a,{styles:c.a}),Object(o.c)(s.a,null),Object(o.c)("div",{role:"presentation",css:m},Object(o.c)("header",{css:d},Object(o.c)("h1",{role:"presentation",ref:t,css:p},"Blog")),Object(o.c)("section",{css:h},Object(o.c)(l.a,{liStyle:[y],linkStyle:[f]}))))}},170:function(e,t,n){"use strict";n.d(t,"a",function(){return o}),n.d(t,"b",function(){return r});var o=function(e){var t=e.length;return Math.floor(Math.random()*t)},r=function(){return 1e5*Math.random()}},173:function(e,t,n){"use strict";n(186),n(172);var o=n(2),r=(n(1),n(3)),a=n.n(r),i=n(171),s=n(187),l=n(188),c=n(63),u=[{icon:l.a,href:"https://github.com/Powell-v2",name:"GitHub"},{icon:l.b,href:"http://stackoverflow.com/story/powell-v2",name:"StackOverflow"},{icon:s.b,href:"https://t.me/keepiteasy",name:"Telegram"},{icon:s.a,href:"mailto:ermolinpv@gmail.com",name:"Email"}],m=function(e){var t=e.iconSize,n=e.pullIcon,r=e.listStyle,a=e.linkStyle,s=e.displayName;return Object(o.c)("ul",{css:r},u.map(function(e){var r=e.href,l=e.icon,u=e.name,m=Object(o.c)(i.a,{fixedWidth:!0,pull:n,size:t,icon:l,alt:u}),d=r.startsWith("mailto");return Object(o.c)("li",{key:u},s&&m,Object(o.c)(c.a,{key:u,css:a,href:r,target:d?null:"_blank"},s?u:m))}))};m.propTypes={iconSize:a.a.string,pullIcon:a.a.string,displayName:a.a.bool,listStyle:a.a.arrayOf(a.a.object),linkStyle:a.a.arrayOf(a.a.object)},m.defaultProps={iconSize:"1x",pullIcon:null,displayName:!1,listStyle:[],linkStyle:[]},t.a=m},174:function(e,t,n){"use strict";var o=n(2),r=n(24);t.a=Object(o.b)('*{margin:0;padding:0;border:0;box-sizing:border-box;}html{font-size:62.5%;}body{font-family:"Quicksand",sans-serif,serif,monospace;font-size:1.8rem;background:',r.a.black,";}ul{list-style:none;}")},178:function(e,t,n){"use strict";var o=n(20),r=n(2),a=n(1),i=n(3),s=n.n(i),l=n(179),c=n(64),u={name:"in3yi3",styles:"font-weight:bold;"},m={name:"1vjhfwl",styles:"height:100vh;overflow-y:hidden;"},d=function(e){var t=e.title,n=e.date,i=e.body,s=e.sectionStyle,d=e.articleClassName,p=Object(a.useContext)(c.b).isMenuOpen;return Object(r.c)("section",{css:Object(o.a)([].concat(s,[p&&m]))},Object(r.c)("header",null,Object(r.c)("h1",null,t),Object(r.c)("p",{css:u},"Date:"," ",n)),Object(r.c)("article",{className:d},Object(r.c)(l.MDXRenderer,null,i)))};d.propTypes={body:s.a.string.isRequired,date:s.a.string.isRequired,title:s.a.string.isRequired,sectionStyle:s.a.arrayOf(s.a.object),articleClassName:s.a.string},d.defaultProps={sectionStyle:[],articleClassName:null},t.a=d},179:function(e,t,n){var o=n(180);e.exports={MDXRenderer:o}},180:function(e,t,n){var o=n(181);n(66),n(46),n(183);var r=n(10),a=n(45),i=n(1),s=n(31),l=s.useMDXComponents,c=s.mdx,u=n(67).useMDXScope;e.exports=function(e){var t=e.scope,n=e.components,s=e.children,m=a(e,["scope","components","children"]),d=l(n),p=u(t);if(!s)return null;var h=r({React:i,mdx:c},p),y=Object.keys(h),f=y.map(function(e){return h[e]}),g=o(Function,["_fn"].concat(y,[""+s])).apply(void 0,[{}].concat(f));return i.createElement(g,r({components:d},m))}},181:function(e,t,n){var o=n(182);function r(t,n,a){return!function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()?e.exports=r=function(e,t,n){var r=[null];r.push.apply(r,t);var a=new(Function.bind.apply(e,r));return n&&o(a,n.prototype),a}:e.exports=r=Reflect.construct,r.apply(null,arguments)}e.exports=r},182:function(e,t){function n(t,o){return e.exports=n=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},n(t,o)}e.exports=n},183:function(e,t,n){var o=n(33),r=n(35);n(184)("keys",function(){return function(e){return r(o(e))}})},184:function(e,t,n){var o=n(14),r=n(25),a=n(34);e.exports=function(e,t){var n=(r.Object||{})[e]||Object[e],i={};i[e]=t(n),o(o.S+o.F*a(function(){n(1)}),"Object",i)}},185:function(e,t,n){"use strict";var o=n(2),r=n(1),a=n.n(r),i=n(3),s=n.n(i),l=n(64),c=n(20),u=n(24),m={name:"64f26i",styles:"position:fixed;top:3.5rem;left:2.5rem;width:5rem;height:3rem;z-index:555;@media (max-width:499px){transform:scale(.75);top:2.5rem;left:1.5rem;}"},d=Object(o.b)("width:inherit;height:inherit;background-color:",u.a.purple,';font-size:1.5rem;cursor:pointer;outline:none;transition:transform .444s ease-out;&:before,&:after{content:"";position:absolute;left:0;border-left:2.5rem solid transparent;border-right:2.5rem solid transparent;}&:before{top:-1.5rem;border-bottom:1.5rem solid ',u.a.purple,";}&:after{bottom:-1.5rem;border-top:1.5rem solid ",u.a.purple,";}&:hover{transform:rotate(-180deg);}"),p={name:"7x4fxk",styles:"&:hover > span{&::before{transform:scaleX(1);transform-origin:right;}&::after{transform:scaleX(.8);transform-origin:right;}& span{transform-origin:right;transform:scaleX(.6);}}"},h=Object(o.b)('display:block;padding:0 .9rem;&::before,&::after{content:"";display:block;height:calc(3rem / 6);background-color:',u.a.beige,";transition:all .444s ease-out;}&::before,&::after{transform-origin:center;transform:scaleX(.55);}& span{display:block;height:calc(3rem / 6);margin:calc(3rem / 6) 0;background-color:",u.a.beige,";transform-origin:center;transform:scaleX(1);transition:all .444s ease-out;}"),y={name:"g5vrh4",styles:"&::before,&::after{transform-origin:center;}&::before{transform:scaleX(1) translateY(1rem) rotate(-45deg);}&::after{transform:scaleX(1) translateY(-1rem) rotate(45deg);}& span{transform:scaleX(0);}"},f=function(e){var t=e.isOpen,n=e.setIsOpen;return Object(o.c)("div",{css:m},Object(o.c)("button",{type:"button",css:Object(c.a)([d,!t&&p]),onClick:function(){return n(function(e){return!e})},onKeyDown:function(e){13!==e.keyCode&&32!==e.keyCode||n(!0)}},Object(o.c)("span",{css:Object(c.a)([h,t&&y])},Object(o.c)("span",null))))};f.propTypes={isOpen:s.a.bool.isRequired,setIsOpen:s.a.func.isRequired};var g=f,b={name:"1ba3vnf",styles:"position:fixed;height:100vh;width:100vw;z-index:12;background-color:rgba(0,0,0,0.93);"},x=function(){return Object(o.c)("div",{css:b})},w=(n(65),n(172),n(170)),v=n(63),k=n(173),j=[{name:"Home",to:"/"},{name:"About",to:"/about"},{name:"Blog",to:"/blog"},{name:"Terminal",to:"/cmd"}],O={name:"1sixucz",styles:"position:absolute;display:grid;justify-items:center;grid-template-rows:repeat(2,max-content);grid-gap:2.5rem;width:100%;top:50%;left:50%;z-index:12;transform:translate(-50%,-50%);& nav{align-self:end;}"},_={name:"1e1xk3y",styles:"display:grid;@media (max-width:375px){transform:scale(.8);}@media (min-width:375px) and (max-width:500px){transform:scale(.9);}"},S={name:"hjs54b",styles:"height:4rem;line-height:4rem;margin:2rem auto;padding:0 1.5rem;font-size:2.5rem;cursor:pointer;text-transform:uppercase;"},P={name:"1jqbsul",styles:"&:hover span{width:4.5rem;margin:0 .5rem;}"},C=Object(o.b)("display:inline-block;line-height:4rem;width:4rem;margin-left:-1rem;background-color:",u.a.purple,";text-align:center;vertical-align:middle;transition:width .2s,margin .2s;&:first-of-type{border-top-left-radius:.5rem;border-bottom-left-radius:.5rem;}&:last-of-type{border-top-right-radius:.5rem;border-bottom-right-radius:.5rem;}"),D=Object(o.b)("color:",u.a.beige,";display:inline-block;"),N={name:"zjctgd",styles:"display:grid;grid-auto-flow:column;grid-gap:4rem;@media (max-width:374px){grid-gap:2rem;}"},I=function(){return Object(o.c)("section",{css:O},Object(o.c)("nav",null,Object(o.c)("ul",{css:_},j.map(function(e){var t=e.name,n=e.to;return Object(o.c)("li",{key:t,css:Object(c.a)([S,!navigator.maxTouchPoints&&P])},Object(o.c)(v.a,{to:n,css:D},t.split("").map(function(e){return Object(o.c)("span",{key:Object(w.b)(),css:C},e)})))}))),Object(o.c)("section",null,Object(o.c)(k.a,{iconSize:"2x",listStyle:[N]})))},M=function(e){var t=e.setIsMenuOpen,n=Object(r.useState)(!1),i=n[0],s=n[1];return(0,Object(r.useContext)(l.b).toggleMenuState)(i),Object(r.useEffect)(function(){t&&t(i)},[i,t]),Object(r.useEffect)(function(){var e=function(e){27===e.keyCode&&s(function(e){return!e})};return window.addEventListener("keydown",e),function(){return window.removeEventListener("keydown",e)}},[]),Object(o.c)(a.a.Fragment,null,Object(o.c)(g,{isOpen:i,setIsOpen:s}),i&&Object(o.c)(a.a.Fragment,null,Object(o.c)(x,null),Object(o.c)(I,null)))};M.propTypes={setIsMenuOpen:s.a.func},M.defaultProps={setIsMenuOpen:null};t.a=M},193:function(e,t,n){"use strict";var o=n(6),r=n.n(o),a=n(20),i=n(45),s=n.n(i),l=n(2),c=n(194),u=n(1),m=n.n(u),d=n(3),p=n.n(d),h=n(63),y=n(178),f=n(170),g=function(e){var t=e.onItemSelect,n=e.customBulletPoint,o=e.listClassName,i=e.linkStyle,u=e.liStyle,m=e.cmd,d=s()(e,["onItemSelect","customBulletPoint","listClassName","linkStyle","liStyle","cmd"]),p=c.data;return Object(l.c)("ul",{className:o},p.allMdx.edges.map(function(e){var o=e.node,s=o.fields,c=o.frontmatter,p=o.code,g=o.id;return Object(l.c)("li",{css:Object(a.a)([].concat(u)),key:g},n,Object(l.c)(h.a,r()({to:s.slug,cmd:m,tabIndex:0,css:Object(a.a)([].concat(i)),onClick:function(){m&&t(Object(l.c)(y.a,{key:Object(f.b)(),body:p.body,date:c.date,title:c.title,articleClassName:"blogpost--fetched"}))},onKeyDown:function(e){13!==e.keyCode&&32!==e.keyCode||m&&t(Object(l.c)(y.a,{key:Object(f.b)(),body:p.body,date:c.date,title:c.title,articleClassName:"blogpost--fetched"}))}},d),c.title))}))};g.propTypes={onItemSelect:p.a.func,customBulletPoint:p.a.element,listClassName:p.a.string,cmd:p.a.bool,linkStyle:p.a.arrayOf(p.a.object),liStyle:p.a.arrayOf(p.a.object)},g.defaultProps={onItemSelect:function(){},customBulletPoint:Object(l.c)(m.a.Fragment,null),listClassName:"",cmd:!1,linkStyle:[],liStyle:[]},t.a=g},194:function(e){e.exports={data:{allMdx:{edges:[{node:{fields:{slug:"/blog/reshaping_git_history/"},id:"cc96704f-73d2-5f2d-aca4-95fe285c0b5b",frontmatter:{title:"Reshaping Git History",date:"April 24, 2019"},code:{body:'function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  "date": "2019-04-24T00:00:00.000Z",\n  "title": "Reshaping Git History",\n  "published": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");\n    return mdx("div", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = "wrapper";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, ["components"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: "MDXLayout"\n  }), mdx("h2", null, "Rebase to the occasion"), mdx("p", null, "It\'s all too familiar - you start working on some feature locally, you\'ve made several commits, it\'s almost completed. But suddenly requirements change (happens once in a blue moon, right?), and you have to introduce changes. You tack new commits onto the existing chain. But what if you wanted to unite related changes in an effort to improve readability, portability and clarity before sharing your work with others?"), mdx("p", null, "Or consider the following situation. Idea sparks in your mind and you get down to implementing it. In the heat of development, you run up several crude commits in a short succession. You usually strive to keep it focused, but your hands were on fire, you didn\'t want to be bogged down so you temporarily turned a blind eye on formalities. How do you put things in order now that the sudden drive has subsided?"), mdx("p", null, "Another common scenario is back and forth during PR\'s review rounds. There could be several takes before you get it right. Once the review is over, it\'s time to stick changes produced on the fly where they initially belong."), mdx("p", null, "Git grants plenty of freedom when a need to revise local history arises. Commits could be rearranged, altered, split apart, squashed together or wiped out entirely. Surprisingly enough, there is no dedicated tool for modifying history directly! ", mdx("inlineCode", {\n    parentName: "p"\n  }, "git commit --amend"), " might come to your mind as it helps with altering the most recent commit. However, if you need to reach deeper into history, you\'ve got to resort to interactive rebase - the trick is to take a series of commits and rebase them onto their original HEAD instead of another one."), mdx("p", null, "I personally like my commit history to come across as neat and polished, clearly showcasing what has been accomplished. But in this post I\'m not going to dig into why maintaining clean history is beneficial. It\'s rather meant as a practical overview of several ", mdx("inlineCode", {\n    parentName: "p"\n  }, "git rebase --interactive"), " actions allowing for history grooming. Suffice to say it especially makes sense in collaboration environment. When working on some local project which isn\'t destined to see the light of the day you might not really care how its history looks."), mdx("h2", null, "Turn up the bass and rebase"), mdx("p", null, mdx("inlineCode", {\n    parentName: "p"\n  }, "git rebase --interactive"), " command is a robust way to mould commit history. It offers more than ten various actions and rather helpfully all of them, along with succinct explanations, are always outlined below the list of commits which are being rebased. For our purposes, we\'ll be considering the following subset:"), mdx("ul", null, mdx("li", {\n    parentName: "ul"\n  }, mdx("inlineCode", {\n    parentName: "li"\n  }, "edit"), " - allows for amending commit in question;"), mdx("li", {\n    parentName: "ul"\n  }, mdx("inlineCode", {\n    parentName: "li"\n  }, "squash"), " - combine commit at hand with the one directly above and choose which commit message to use;"), mdx("li", {\n    parentName: "ul"\n  }, mdx("inlineCode", {\n    parentName: "li"\n  }, "fixup"), " - has the same effect as ", mdx("inlineCode", {\n    parentName: "li"\n  }, "squash"), ", but uses target commit\'s log message;"), mdx("li", {\n    parentName: "ul"\n  }, mdx("inlineCode", {\n    parentName: "li"\n  }, "drop"), " - erase commit.")), mdx("p", null, "To actually kick off the process we need to supply an SHA hash of the commit which comes right before the point where we\'d like to start rebasing (", mdx("inlineCode", {\n    parentName: "p"\n  }, "-i"), " is a shorthand for ", mdx("inlineCode", {\n    parentName: "p"\n  }, "--interactive"), "):"), mdx("pre", null, mdx("code", _extends({\n    parentName: "pre"\n  }, {\n    "className": "language-text"\n  }), "git rebase -i <after_this_commit>\\n")), mdx("p", null, "You don\'t have to always indicate hash. Tip of the branch (aka HEAD pointer) could be used as a reference instead. Let\'s stick with the last three commits:"), mdx("pre", null, mdx("code", _extends({\n    parentName: "pre"\n  }, {}), "git rebase -i HEAD~3\\n")), mdx("p", null, "As a result, Git opens up an editor within the terminal window and presents a list of selected records which will resemble the following:"), mdx("pre", null, mdx("code", _extends({\n    parentName: "pre"\n  }, {}), "pick a1rt1m3 third-to-last commit summary\\npick bass1st second-to-last commit summary\\npick cr0wbar last commit summary\\n")), mdx("p", null, "Compared to ", mdx("inlineCode", {\n    parentName: "p"\n  }, "git log"), "\'s output, the chronological order is reversed - the oldest change appears at the top here. If we just save the buffer without touching anything, Git will follow the listing downward and execute actions sequentially. ", mdx("inlineCode", {\n    parentName: "p"\n  }, "pick"), " is the default one indicating our intention to keep the commit. If we wanted to manipulate any of the records, we\'d replace ", mdx("inlineCode", {\n    parentName: "p"\n  }, "pick"), " with desired action."), mdx("h3", null, "Editing"), mdx("pre", null, mdx("code", _extends({\n    parentName: "pre"\n  }, {}), "pick a1rt1m3 third-to-last commit summary\\nedit bass1st second-to-last commit summary\\npick cr0wbar last commit summary\\n")), mdx("p", null, "In this scenario, when Git reaches ", mdx("inlineCode", {\n    parentName: "p"\n  }, "bass1st"), ", it will pause and give you an opportunity to introduce changes. Once done, toss edits into the staging area, invoke ", mdx("inlineCode", {\n    parentName: "p"\n  }, "git commit --amend"), " to fold them in and resume the process using ", mdx("inlineCode", {\n    parentName: "p"\n  }, "git rebase --continue"), "."), mdx("p", null, "Sometimes it might make sense to split one large commit apart. In order to achieve that, unstage all associated files via ", mdx("inlineCode", {\n    parentName: "p"\n  }, "git reset HEAD~"), " (which effectively undoes the commit) and form tinier commits as required."), mdx("p", null, "It\'s worth noting that when Git stops and gives you a chance to edit a commit you\'ll find yourself in so called ", mdx("a", _extends({\n    parentName: "p"\n  }, {\n    "href": "https://git-scm.com/docs/git-checkout#_detached_head"\n  }), "detached HEAD state"), ". It usually implies that all new commits will be lost unless you create an explicit reference (new branch or tag) as garbage collector routinely removes non-referenced objects. However, you don\'t have to worry about that while rebasing since Git already knows that we\'d like to retain any changes as part of the process."), mdx("p", null, "Finally, if you misstepped and things got messed up - don\'t fret! It\'s always possible to cancel an ongoing rebase and restore everything to the prior state by executing ", mdx("inlineCode", {\n    parentName: "p"\n  }, "git rebase --abort"), "."), mdx("h3", null, "Squashing and fixups"), mdx("p", null, "Say we committed something which fundamentally belongs to the existing ", mdx("inlineCode", {\n    parentName: "p"\n  }, "a1rt1m3"), " commit:"), mdx("pre", null, mdx("code", _extends({\n    parentName: "pre"\n  }, {}), "pick a1rt1m3 third-to-last commit summary\\npick bass1st second-to-last commit summary\\npick cr0wbar last commit summary\\npick jazz13r new changes\\n")), mdx("p", null, "There are two options to meld ", mdx("inlineCode", {\n    parentName: "p"\n  }, "jazz13r"), " into ", mdx("inlineCode", {\n    parentName: "p"\n  }, "a1rt1m3"), ". First would be ", mdx("inlineCode", {\n    parentName: "p"\n  }, "squash"), ", which allows for choosing which commit message to apply in the end. Second one would be ", mdx("inlineCode", {\n    parentName: "p"\n  }, "fixup"), ", which acts identically but doesn\'t let you pick and uses target commit\'s message instead."), mdx("p", null, "With any of these commands, however, the general idea is to place accessary commit (or commits) right below the target commit:"), mdx("pre", null, mdx("code", _extends({\n    parentName: "pre"\n  }, {}), "pick a1rt1m3 third-to-last commit summary\\nfixup jazz13r new changes\\npick bass1st second-to-last commit summary\\npick cr0wbar last commit summary\\n")), mdx("p", null, "Picking an action and reordering actually could be done automatically. Start with committing new changes using ", mdx("a", _extends({\n    parentName: "p"\n  }, {\n    "href": "https://git-scm.com/docs/git-commit#Documentation/git-commit.txt---fixupltcommitgt"\n  }), "one of the special flags"), " and specifying the target:"), mdx("pre", null, mdx("code", _extends({\n    parentName: "pre"\n  }, {\n    "className": "language-text"\n  }), "git commit --squash (or --fixup) <commit_to_modify>\\n")), mdx("p", null, "Which translates to following, in line with our example:"), mdx("pre", null, mdx("code", _extends({\n    parentName: "pre"\n  }, {}), "git commit --fixup a1rt1m3\\n")), mdx("p", null, "You\'ll notice that the subject line will contain target commit\'s message prefixed with the action we defined earlier:"), mdx("pre", null, mdx("code", _extends({\n    parentName: "pre"\n  }, {\n    "className": "language-text"\n  }), "pick a1rt1m3 third-to-last commit summary\\npick bass1st second-to-last commit summary\\npick cr0wbar last commit summary\\npick jazz13r fixup! third-to-last commit summary\\n")), mdx("p", null, "Start rebasing with an additional flag called ", mdx("a", _extends({\n    parentName: "p"\n  }, {\n    "href": "https://git-scm.com/docs/git-rebase#Documentation/git-rebase.txt---autosquash"\n  }), "\'autosquash\'"), ":"), mdx("pre", null, mdx("code", _extends({\n    parentName: "pre"\n  }, {}), "git rebase -i --autosquash HEAD~4\\n")), mdx("p", null, "Git will pre-scan records and rearrange the list for you. Hey presto!"), mdx("pre", null, mdx("code", _extends({\n    parentName: "pre"\n  }, {\n    "className": "language-text"\n  }), "pick a1rt1m3 third-to-last commit summary\\nfixup jazz13r fixup! third-to-last commit summary\\npick bass1st second-to-last commit summary\\npick cr0wbar last commit summary\\n")), mdx("h3", null, "Deleting"), mdx("p", null, "Deletion is trivial. Either apply ", mdx("inlineCode", {\n    parentName: "p"\n  }, "drop"), " action, or simply erase the line."), mdx("h3", null, "Reordering"), mdx("p", null, "Switching order of the items is also a no-brainer. Simply rearrange the lines as necessary:"), mdx("pre", null, mdx("code", _extends({\n    parentName: "pre"\n  }, {}), "pick bass1st second-to-last commit summary\\npick cr0wbar last commit summary\\npick a1rt1m3 third-to-last commit summary\\n")), mdx("h2", null, "Proceed with caution"), mdx("p", null, "Rebasing (or any other method of rewriting for that matter) a branch which others have used as a basis for their work is a terrible idea. It will likely cause major nuisance and provoke issues. Even if you haven\'t changed anything during rebase, every commit touched by the process will have its hash recalculated and everyone downstream at the very least will be forced to refetch in order to avoid complications. ", mdx("a", _extends({\n    parentName: "p"\n  }, {\n    "href": "https://git-scm.com/docs/git-rebase#_the_hard_case"\n  }), "In the worst case"), ", they\'ll have to manually fix their history and this is by no means an enjoyable pastime. Bottom line - never ever tamper shared work history and only push your commits to the remote when you are truly happy with the result."));\n}\nMDXContent.isMDXComponent = true;'}}},{node:{fields:{slug:"/blog/better_backup/"},id:"38358d1b-e807-50c1-8616-e89b019aba4a",frontmatter:{title:"A Better Backup Plan",date:"January 30, 2019"},code:{body:'function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  "date": "2019-01-30T00:00:00.000Z",\n  "title": "A Better Backup Plan",\n  "published": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");\n    return mdx("div", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = "wrapper";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, ["components"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: "MDXLayout"\n  }), mdx("p", null, "Things do not always go as planned - future has a tendency to surprise in many unexpected ways. While accounting for every possible outcome is simply beyond human abilities, it\'s no reason to skip on planning and let things slide. Having a fallback option is vital as it eliminates fear of failure which severely bogs down and, in worst cases, kills aspirations."), mdx("p", null, "On the other hand, conceiving an alternative might stifle your performance and hinder your potential. There is a safety net out there, and you subconsciously pull your sleeves down. This might indeed prevent you to execute at the highest level of your abilities in order to achieve set goals. While this sounds reasonable, the truth is that not everyone can transform their fear of failure into motivation - and fear can be absolutely paralysing when stakes are high enough. Moreover, persisting against all odds is rather an exception and, in fairness, not the most efficient approach considering the pace of change nowadays. No doubt you\'ve got to stick to your guns, but at the same time you want to be fluid, able to adapt and evolve along with your environment."), mdx("p", null, "I think you don\'t have to mutually exclude these approaches. Instead, pick the best parts and fruitfully combine them. You can still commit completely to your initial objective as if there was no tomorrow even with few fallback options already schemed. It requires sort of a mind trick, though. You\'ve got to stash these backups away and put a lid on them. Carry through with all your energy focused on accomplishing target goals. At the same time, be mindful and perform reality checks. When you realize there is a high probability that it won\'t pan out, switch to the next plan in chain and indulge in it with the same rigor. Remember - there is always a risk of falling victim to sunken cost fallacy instead of being smart about your next move."), mdx("p", null, "Speaking of plan composition, at the very least you\'ll need plan B. It might not\\nbe as ambitious as plan A, however keep these two as close as possible in scope.\\nPlan Z won\'t hurt either. That\'s your insurance, a course of action when everything falls through. Force majeure is real and you\'d better be ready when the world comes crashing down."));\n}\nMDXContent.isMDXComponent = true;'}}},{node:{fields:{slug:"/blog/deep_work/"},id:"1d976139-e44b-52a7-9bb8-b950a8ac68d7",frontmatter:{title:"Deep Work",date:"January 09, 2019"},code:{body:'function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  "date": "2019-01-09T00:00:00.000Z",\n  "title": "Deep Work",\n  "published": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");\n    return mdx("div", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = "wrapper";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, ["components"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: "MDXLayout"\n  }), mdx("p", null, "Let\'s face it - it\'s extremely hard to keep your mind at some particular target for prolonged stretch of time without getting your attention diverted. Even if you take measures to protect yourself - by retreating to some hushed place, for instance - the mind keeps racing, only just you are being distracted from within."), mdx("p", null, "This might not be an issue for the majority of people - after all, our life is comprised of many activities which have to be done swiftly and it\'s not necessary at all to ponder at some task you\'ve done million times before. Yet for someone who is tackling a complicated problem or trying to learn a difficult topic, distraction is costly - getting back on track isn\'t something you can do by snapping your fingers. I certainly wish I could take a snapshot of everything in my mind before talking to someone and then immediately roll myself back into it after the conversation is over."), mdx("p", null, "Attention is akin to a muscle in a sense that it could be built. The stronger it is, the longer is your ability to focus. The longer you can maintain focus, the more quality progress you can make in whatever activity you are engaged. Powering through a tough spot in a problem or task at hand instead of backing down (which is an innate response for the majority of us) might be one of the best exercises out there. You are unlikely to arrive at a solution straight away as it usually starts to click after few intermittent attacks - but that definitely pumps the focus muscle a lot."), mdx("p", null, "The ability to maintain strong focus opens up a lot of opportunities for both personal and professional development and more often than not unlocks useful insights. Undivided attention is one of your most valuable assets. Nurture it, guard it. And as with any scarce resource, spend wisely."));\n}\nMDXContent.isMDXComponent = true;'}}},{node:{fields:{slug:"/blog/site_redesign/"},id:"a75fec2f-90c8-583f-a5c4-928cbd68fab5",frontmatter:{title:"How I Redesigned My Website",date:"February 25, 2018"},code:{body:'function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  "date": "2018-02-25T00:00:00.000Z",\n  "title": "How I Redesigned My Website",\n  "published": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");\n    return mdx("div", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = "wrapper";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, ["components"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: "MDXLayout"\n  }), mdx("p", null, "As a \\"frontender\\" who is paving his way towards fullstack, I tend to work a lot with CLI tools. They are an essential part of my workflow, and console has become a reliable companion over the past couple of years. One day, an odd idea sprang up in my mind - to redesign my personal website, which was a typical collection of webpages with a navbar, as a terminal window. Many people not familiar with programming dread even a glimpse of thought of having to interact with it, and that\'s understandable. We are all hardwired to fear the unknown. In reality, interacting with command line becomes a breeze once you get familiar with its mechanics - it only takes a little bit of practice."), mdx("p", null, "Final prototype (with styling) was ready in two days. I had several variations of background in mind, and chose canvas over gradient or some abstract geometrical pattern since it was going to be more challenging - exactly what I needed to solidify recently acquired knowledge about drawing in the browser."), mdx("p", null, "Flexbox was chosen for the layout due to its wide support. However, slowly but surely Grid is making its way and I definitely plan to implement it in the nearest future as a primary option, with Flexbox as a fallback for older browsers."), mdx("p", null, mdx("em", {\n    parentName: "p"\n  }, "\\"Responsive or not?\\""), " ceased to be a question long time ago hence I made sure webpage looks great on smaller screens too. Poking into terminal on a phone might sound like a joke, although it\'s no reason to skip on responsive design despite its challenges. After all, ", mdx("strong", {\n    parentName: "p"\n  }, "powell"), " is meant to be a simplified replica of real-world CLI tool."), mdx("p", null, "From UX\'s standpoint, my website is far from ideals of user-friendly, but I hope it would appeal to brothers-and-sisters-in-arms. Made with joy and for the love of web development \\uD83E\\uDDE1."));\n}\nMDXContent.isMDXComponent = true;'}}},{node:{fields:{slug:"/blog/first_os_contrib/"},id:"3de23777-285e-5ffa-923b-e2c2e82ee2de",frontmatter:{title:"First Open Source Contribution",date:"January 05, 2017"},code:{body:'function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  "date": "2017-01-05T00:00:00.000Z",\n  "title": "First Open Source Contribution",\n  "published": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope");\n    return mdx("div", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = "wrapper";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, ["components"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: "MDXLayout"\n  }), mdx("p", null, "Yesterday my first PR got merged (woohoo!), which marks the beginning of my path in the open source world."), mdx("p", null, "Its landscape is vast and diverse, and for a newcomer who is looking for an opportunity to make a contribution for the first time, the task of finding the right issue might seem daunting. I certainly felt a bit lost while navigating through the seemingly endless sea of projects available on GitHub. Luckily, at one point, I stumbled across ", mdx("a", _extends({\n    parentName: "p"\n  }, {\n    "href": "https://opensource.guide/"\n  }), "this wonderful guide"), " and a set of bite-sized ", mdx("a", _extends({\n    parentName: "p"\n  }, {\n    "href": "https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github"\n  }), "video lessons made by Kent C. Dodds"), ". The former could be seen as an encyclopedia, covering everything from code of conduct to project maintaining best practices and licensing, while the latter walks you through the complete process of making first-time contribution. I\'m especially thankful to Kent since he demystified the whole thing for me =) Only a month ago I held a belief that open source software is all about code, but it turns out that the story doesn\'t end there - documentation, answering questions, issue triage, translations ... there is so much more to it."), mdx("p", null, "I really like how everything unfolds so far. I took my learning to the next level while making a positive impact - isn\'t that a fantastic combination? And the journey has just begun."), mdx("p", null, mdx("strong", {\n    parentName: "p"\n  }, "P.S."), " Here is a word of encouragement for soon-to-become contributors: no matter the size of your contribution, it makes a difference. Let\'s improve the world we live in incrementally, one commit at a time."));\n}\nMDXContent.isMDXComponent = true;'}}}]}}}},213:function(e){e.exports={data:{headerImg:{publicURL:"/static/header-10c75815f81c2117021bd8ee6c1b5be9.svg"}}}}}]);
//# sourceMappingURL=component---src-pages-blog-jsx-6b6ee95e3dc0467ab71d.js.map