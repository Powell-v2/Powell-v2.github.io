{"version":3,"sources":["webpack:///./src/components/seo.jsx","webpack:///./src/utils/index.js","webpack:///./src/components/ContactLinks.jsx","webpack:///./src/components/Post.jsx","webpack:///./src/components/PostList.jsx"],"names":["detailsQuery","SEO","_ref","description","lang","meta","keywords","title","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","propTypes","PropTypes","string","arrayOf","isRequired","__webpack_require__","d","__webpack_exports__","randIdx","randInt","Math","floor","random","contacts","icon","faPaperPlane","href","faEnvelope","profiles","faGithub","faStackOverflow","containerCss","styles","ContactLinks","iconSize","listStyle","linkStyle","displayName","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","css","map","_ref2","iconComp","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","fixedWidth","size","alt","isEmail","startsWith","key","_Link__WEBPACK_IMPORTED_MODULE_8__","target","_ref3","bool","object","boldFont","sectionCss","palette","beige","black","headerCss","gold","articleCss","footerCss","switchCss","purple","teal","nextSwitchCss","lightPurple","previousSwitchCss","detailsWrapperStyle","disableScrollCss","singleSwitchCss","Post","date","body","articleClassName","previousPost","nextPost","isMenuOpen","useContext","AppContext","isOutermostPost","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","className","gatsby_mdx__WEBPACK_IMPORTED_MODULE_4__","_Link__WEBPACK_IMPORTED_MODULE_6__","to","path","shape","PostList","onItemSelect","customBulletPoint","liStyle","cmd","other","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2___default","posts","_public_static_d_440542479_json__WEBPACK_IMPORTED_MODULE_4__","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","allMdx","edges","_ref2$node","node","fields","frontmatter","code","id","_emotion_css__WEBPACK_IMPORTED_MODULE_1__","_Link__WEBPACK_IMPORTED_MODULE_7__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","slug","tabIndex","onClick","_Post__WEBPACK_IMPORTED_MODULE_8__","onKeyDown","e","keyCode","func","element","react__WEBPACK_IMPORTED_MODULE_5___default","Fragment"],"mappings":"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","file":"2-98f865ee5accd0b111ef.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n\nexport default function SEO({\n  description, lang, meta, keywords, title,\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription = description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  description: ``,\n  lang: `en`,\n  meta: [],\n  keywords: [`blog`, `web development`],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.string),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n","const randIdx = ({ length }) => Math.floor(Math.random() * length)\n\nconst randInt = () => Math.random() * 100000\n\nexport { randIdx, randInt }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { css } from '@emotion/core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPaperPlane, faEnvelope } from '@fortawesome/free-regular-svg-icons'\nimport { faGithub, faStackOverflow } from '@fortawesome/free-brands-svg-icons'\n\nimport Link from './Link'\n\nconst contacts = [\n  {\n    icon: faPaperPlane,\n    href: `https://t.me/keepiteasy`,\n    name: `Telegram`,\n  },\n  {\n    icon: faEnvelope,\n    href: `mailto:ermolinpv@gmail.com`,\n    name: `Email`,\n  },\n]\n\nconst profiles = [\n  {\n    icon: faGithub,\n    href: `https://github.com/Powell-v2`,\n    name: `GitHub`,\n  },\n  {\n    icon: faStackOverflow,\n    href: `https://stackoverflow.com/users/7200363/pa-ye`,\n    name: `StackOverflow`,\n  },\n]\n\nconst containerCss = css`\n  display: grid;\n  gap: 1.5rem;\n`\n\nconst ContactLinks = ({\n  iconSize,\n  listStyle,\n  linkStyle,\n  displayName\n}) => (\n  <div css={containerCss}>\n    <div>\n      <p>Get in touch:</p>\n      <ul css={listStyle}>\n        {contacts.map(({ href, icon, name }) => {\n          const iconComp = (\n            <FontAwesomeIcon\n              fixedWidth\n              size={iconSize}\n              icon={icon}\n              alt={name}\n            />\n          )\n          const isEmail = href.startsWith(`mailto`)\n\n          return (\n            <li key={name}>\n              {displayName && iconComp}\n              <Link\n                key={name}\n                css={linkStyle}\n                href={href}\n                target={isEmail ? null : `_blank`}\n              >\n                {displayName ? name : iconComp}\n              </Link>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n    <div>\n      <p>Profiles:</p>\n      <ul css={listStyle}>\n        {profiles.map(({ href, icon, name }) => {\n          const iconComp = (\n            <FontAwesomeIcon\n              fixedWidth\n              size={iconSize}\n              icon={icon}\n              alt={name}\n            />\n          )\n          const isEmail = href.startsWith(`mailto`)\n\n          return (\n            <li key={name}>\n              {displayName && iconComp}\n              <Link\n                key={name}\n                css={linkStyle}\n                href={href}\n                target={isEmail ? null : `_blank`}\n              >\n                {displayName ? name : iconComp}\n              </Link>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  </div>\n)\n\nContactLinks.propTypes = {\n  iconSize: PropTypes.string,\n  displayName: PropTypes.bool,\n  listStyle: PropTypes.arrayOf(PropTypes.object),\n  linkStyle: PropTypes.arrayOf(PropTypes.object),\n}\n\nContactLinks.defaultProps = {\n  iconSize: \"1x\",\n  displayName: false,\n  listStyle: [],\n  linkStyle: [],\n}\n\nexport default ContactLinks\n","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { MDXRenderer } from 'gatsby-mdx'\nimport { css } from '@emotion/core'\n\nimport AppContext from '../context/AppContext'\nimport Link from './Link'\n\nimport { palette } from '../styles/meta'\n\nconst boldFont = css`font-weight: bold;`\nconst sectionCss = css`\n  display: grid;\n  grid-template-columns: 15% 70% 15%;\n  grid-template-rows: repeat(3, max-content) auto;\n  grid-template-areas:\n    \". header  .\"\n    \". details .\"\n    \". body    .\"\n    \". footer  .\";\n  min-height: 100vh;\n  padding-top: 15rem;\n  padding-bottom: 5rem;\n  letter-spacing: .05rem;\n  color: ${palette.beige};\n  background-color: ${palette.black};\n  @media(max-width: 425px) {\n    grid-template-columns: 7.5% 85% 7.5%;\n  }\n  @media(min-width: 425px) and (max-width: 950px) {\n    grid-template-columns: 10% 80% 10%;\n  }\n`\nconst headerCss = css`\n  grid-area: header;\n  text-align: center;\n  & h1 {\n    color: ${palette.gold};\n    font-size: 4.75rem;\n  }\n`\nconst articleCss = css`\n  grid-area: body;\n  padding-bottom: 3rem;\n  & p {\n    padding: 1rem 0;\n    line-height: 1.6;\n  }\n`\nconst footerCss = css`\n  position: relative;\n  grid-area: footer;\n  display: grid;\n  grid-template-rows: repeat(2, 1fr);\n  grid-gap: 2rem;\n  justify-items: center;\n  padding: 2rem 0;\n  text-align: center;\n`\nconst switchCss = css`\n  position: relative;\n  display: grid;\n  grid-template-rows: minmax(min-content, max-content) 1fr;\n  align-items: center;\n  width: 85%;\n  max-width: 50rem;\n  padding: 1rem 2rem;\n  background-color: ${palette.purple};\n  border-bottom: 4px solid ${palette.teal};\n  & span {\n    padding: 1rem 2rem;\n  }\n`\nconst nextSwitchCss = css`\n  box-shadow:\n    -2rem 0 0 -1rem ${palette.lightPurple},\n    -4rem 0 0 -2rem ${palette.purple},\n    -6rem 0 0 -3rem ${palette.lightPurple};\n`\nconst previousSwitchCss = css`\n  box-shadow:\n    2rem 0 0 -1rem ${palette.lightPurple},\n    4rem 0 0 -2rem ${palette.purple},\n    6rem 0 0 -3rem ${palette.lightPurple};\n`\nconst detailsWrapperStyle = css`\n  grid-area: details;\n  position: relative;\n  display: inline-block;\n  margin: 7.5rem 0;\n  z-index: 0;\n  padding: 1rem 2rem;\n  &::after, &::before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: calc(49% + 1px);\n  }\n  &::after {\n    height: 1px;\n    width: 50vw;\n    left: 50%;\n    transform: translateX(-50%);\n    background-color: ${palette.purple};\n    z-index: -2;\n  }\n  &::before {\n    height: 3px;\n    margin-top: -1px;\n    background-color: ${palette.black};\n    z-index: -1;\n  }\n  & p {\n    font-weight: bold;\n    background-color: ${palette.purple};\n    padding: 1.5rem;\n    &::after, &::before {\n      content: \"\";\n      position: absolute;\n      top: 15%;\n      border: 25px solid transparent;\n    }\n    &::after {\n      right: -30px;\n      border-left: 25px solid ${palette.purple};\n    }\n    &::before {\n      left: -30px;\n      border-right: 25px solid ${palette.purple};\n    }\n    @media (max-width: 326px) {\n      &::after, &::before {\n        top: 12%;\n        border: 35px solid transparent;\n      }\n      &::after {\n        border-left: 15px solid ${palette.purple};\n      }\n      &::before {\n        border-right: 15px solid ${palette.purple};\n      }\n    }\n  }\n`\nconst disableScrollCss = css`\n  height: 100vh;\n  overflow-y: hidden;\n`\nconst singleSwitchCss = css`\n  grid-template-rows: none;\n`\n\nconst Post = ({\n  title,\n  date,\n  body,\n  articleClassName,\n  previousPost,\n  nextPost,\n}) => {\n  const { isMenuOpen } = useContext(AppContext)\n  const isOutermostPost = !previousPost || !nextPost\n\n  return (\n    <section css={[sectionCss, isMenuOpen && disableScrollCss]}>\n      <header css={headerCss}>\n        <h1>\n          {title}\n        </h1>\n        <div css={detailsWrapperStyle}>\n          <p>\n            Date:\n            {` `}\n            {date}\n          </p>\n        </div>\n      </header>\n      <article\n        className={articleClassName}\n        css={articleCss}\n      >\n        <MDXRenderer>\n          {body}\n        </MDXRenderer>\n      </article>\n      <footer\n        css={[footerCss, isOutermostPost && singleSwitchCss]}\n      >\n        {nextPost && (\n          <Link\n            to={nextPost.path}\n            css={[switchCss, nextSwitchCss]}\n          >\n            <span>\n              Next post:\n            </span>\n            <span css={boldFont}>\n              {nextPost.title}\n            </span>\n          </Link>\n        )}\n        {previousPost && (\n          <Link\n            to={previousPost.path}\n            css={[switchCss, previousSwitchCss]}\n          >\n            <span>Previous post:</span>\n            <span css={boldFont}>\n              {previousPost.title}\n            </span>\n          </Link>\n        )}\n      </footer>\n    </section>\n  )\n}\n\nPost.propTypes = {\n  body: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  articleClassName: PropTypes.string,\n  previousPost: PropTypes.shape({\n    path: PropTypes.string,\n    title: PropTypes.string,\n  }),\n  nextPost: PropTypes.shape({\n    path: PropTypes.string,\n    title: PropTypes.string,\n  }),\n}\n\nPost.defaultProps = {\n  articleClassName: ``,\n  previousPost: null,\n  nextPost: null,\n}\n\nexport default Post\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Link from './Link'\nimport Post from './Post'\n\nimport { randInt } from '../utils'\n\nconst PostList = ({\n  onItemSelect,\n  customBulletPoint,\n  linkStyle,\n  liStyle,\n  cmd,\n  ...other\n}) => {\n  const posts = useStaticQuery(graphql`\n    query {\n      allMdx(\n        sort: {\n          fields: frontmatter___date,\n          order: DESC\n        }\n        filter: {\n          frontmatter: { published: { eq: true }}\n        }\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            id\n            frontmatter {\n              title\n              date(formatString: \"MMMM DD, YYYY\")\n            }\n            code {\n              body\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <ul>\n      {posts.allMdx.edges\n        .map(({\n          node: {\n            fields, frontmatter, code, id\n          }\n        }) => (\n          <li\n            css={[...liStyle]}\n            key={id}\n          >\n            {customBulletPoint}\n            <Link\n              to={fields.slug}\n              cmd={cmd}\n              tabIndex={0}\n              css={[...linkStyle]}\n              onClick={() => {\n                if (cmd) {\n                  onItemSelect(\n                    <Post\n                      key={randInt()}\n                      body={code.body}\n                      date={frontmatter.date}\n                      title={frontmatter.title}\n                      articleClassName=\"blogpost--fetched\"\n                    />\n                  )\n                }\n              }}\n              onKeyDown={(e) => {\n                // enter and space, respectively\n                if (e.keyCode === 13 || e.keyCode === 32) {\n                  if (cmd) {\n                    onItemSelect(\n                      <Post\n                        key={randInt()}\n                        body={code.body}\n                        date={frontmatter.date}\n                        title={frontmatter.title}\n                        articleClassName=\"blogpost--fetched\"\n                      />\n                    )\n                  }\n                }\n              }}\n              {...other}\n            >\n              {frontmatter.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  )\n}\n\nPostList.propTypes = {\n  onItemSelect: PropTypes.func,\n  customBulletPoint: PropTypes.element,\n  cmd: PropTypes.bool,\n  linkStyle: PropTypes.arrayOf(PropTypes.object),\n  liStyle: PropTypes.arrayOf(PropTypes.object),\n}\n\nPostList.defaultProps = {\n  onItemSelect: () => {},\n  customBulletPoint: <></>,\n  cmd: false,\n  linkStyle: [],\n  liStyle: [],\n}\n\nexport default PostList\n"],"sourceRoot":""}